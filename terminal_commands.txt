1. Шпаргалка:
https://practicum.yandex.ru/trainer/git-basics/lesson/fe0bcd71-f592-423b-bb81-27c37a6a115b/

# Узнать, где вы сейчас, поможет команда pwd (print working directory — «показать рабочую папку»)
pwd # путь к текущей директории.

#cd (change directory — «сменить директорию») и символ ~ — обозначение домашней директории.
cd ~ # Перейти к домашней директории.
$ cd / # перемещает в корневую директорию

# ls - (list directory contents — «отобразить содержимое директории»).
ls # Вывести содержимое директории.
ls - a # вывести расширенный список.
ls ~ # выведет содержимое домашней директории
ls .. # покажет содержимое родительской директории.
# Дополнительные возможности ls:
# вызвать ls с флагом -a и вывести расширенный список. В нём отобразятся все скрытые файлы,
# которые начинаются с символа . (например, файлы конфигурации). В том числе два особых файла . и ..,
# которые обозначают текущую и родительскую директории.

# cd (от англ. change directory — «сменить директорию»).
# cd "Фотографии с дня рождения" если в названии папки есть пробелы, при вводе нужно использовать кавычки.
cd # Сменить директорию

# Вернуться в родительскую директорию — то есть на уровень выше, — нужно написать две точки: ..
.. # на уровень выше

# Чтобы обратиться к текущей директории, можно использовать .. Но это нужно довольно редко — например,
# для запуска скриптов и программ, которые принимают папку в качестве параметра.

# Также cd позволяет перемещаться сразу через несколько директорий. Для этого нужно разделить их названия знаком /.
cd github/open-source-project # переходим через несколько директорий

Создание файлов и директорий — touch, mkdir
# создать файл, нужно ввести в консоль команду touch (англ. «коснуться»)
с именем файла в качестве параметра: touch %ИМЯ_ФАЙЛА%.
$ touch my-new-file.txt # создали файл my-new-file.txt
$ touch ../../file.txt создаст файл file.txt на две папки выше по иерархии.

#Для создания директорий через терминал используют другую команду —
#mkdir (от англ. make directory — «создать директорию»).
$ mkdir new-dir # создали директорию new-dir
# создали папку dir-deeper-inside в папке dir-inside, которая находится в папке dir1:
$ mkdir -p dir1/dir-inside/dir-deeper-inside
$ mkdir ~/my-git-projects # создаст папку my-git-projects внутри домашней директории.

Копирование файлов — cp
# Для копирования файлов через терминал существует команда cp (от англ. copy — «копировать»).
# В простом виде cp принимает два параметра: что копируем и куда копируем.
$ cp что_копируем куда_копируем

# скопировали index.html в папку src:
$ cp index.html src/

# cp что_копируем что_копируем что_копируем куда_копируем:
$ cp index.html style.css script.js src/
# скопировали три файла (index.html, style.css и script.js) в папку src

Перемещение файлов и папок — mv
# команда mv (от англ. move — «переместить»).

# сначала указываем имя файла, который хотим переместить, потом путь — куда перемещаем:
$ mv table.csv ./very-important-files

# перешли в папку very-important-files и проверили, что всё сработало
$ cd very-important-files
$ ls
table.csv

Чтение файлов — cat
# Команда cat работает только с текстовыми файлами.
# прочитать файл, в консоль нужно ввести cat (от англ. concatenate and print — «объединить и распечатать»)
# вместе с именем файла. Команда распечатает то, что содержится в нём.

$ cat myfile.txt # распечатали содержимое файла myfile.txt

Удаление файлов и папок — rm, rmdir, rm -r
# Чтобы удалить файл, нужно напечатать команду rm (от англ. remove — «удалить») и передать ей имя файла.

$ rm example.txt # удалили файл example.txt из текущей папки

# удалить папку можно командой rmdir (от англ. remove directory — «удалить директорию»).
# Не забудьте указать имя папки.

$ rmdir images # команда удалит папку images из текущей директории,
               # если папка images пуста
$ rm -r images # удалили папку images со всем её содержимым из текущей директории

# В этом случае команда rm -r (-r — от англ. recursive, «рекурсивный») рекурсивно удаляет файлы и папки.
# Это значит, что удаление будет последовательно применяться к каждому из элементов в этой папке
# — пока не сотрёт их все. Затем команда удалит пустую директорию.

Выполняйте сразу несколько команд &&

$ mkdir second-project && cd second-project && touch index.html style.css
# создаём папку second-project,
# переходим в папку second-project
# и создаём в ней два файла: index.html и style.css

# Если нужно найти какую-нибудь из них, достаточно вспомнить, с каких букв она начинается.
# Можно набрать их в командной строке и дважды нажать клавишу Tab.
# Терминал покажет список всех команд, которые начинаются с этих символов.

# Начните печатать имя папки или файла (они должны быть в той же директории) и нажмите Tab.
# Терминал заполнит имя автоматически.



